{"view_pdb":{"author":null,"declares":{"name":"view_pdb","parameters":[{"name":"pdb.txt","text":null},{"name":"save.file","text":null}],"sourceMap":{"File":"view_pdb.R","Line":"5","Method":{"Method":"view_pdb","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"view_pdb"},"pdb_pdf":{"author":null,"declares":{"name":"pdb_pdf","parameters":[{"name":"pdb.txt","text":null},{"name":"save.file","text":null}],"sourceMap":{"File":"view_pdb.R","Line":"22","Method":{"Method":"pdb_pdf","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"pdb_pdf"},".onLoad":{"author":null,"declares":{"name":".onLoad","parameters":[],"sourceMap":{"File":"zzz.R","Line":"6","Method":{"Method":".onLoad","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".onLoad"},"smiles_2_pdb":{"author":null,"declares":{"name":"smiles_2_pdb","parameters":[{"name":"smiles","text":null},{"name":"db.xref","text":"'NA'"},{"name":"openbabel","text":"'getOption'('openbabel')"},{"name":"debug","text":"FALSE"}],"sourceMap":{"File":"openbabel.R","Line":"6","Method":{"Method":"smiles_2_pdb","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"openbabel","text":"the program file path to the ``obabel``."}],"returns":"this function returns a plain text content data of the generated pdb structrue file data.","see_also":"","title":"Convert the smiles structure information as pdb structure data"},"smiles_2_pdb_rdkit":{"author":null,"declares":{"name":"smiles_2_pdb_rdkit","parameters":[{"name":"smiles","text":null},{"name":"db.xref","text":"'NA'"},{"name":"rdkit","text":"'getOption'('rdkit_py')"},{"name":"debug","text":"FALSE"}],"sourceMap":{"File":"rdkit.R","Line":"3","Method":{"Method":"smiles_2_pdb_rdkit","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"smiles_2_pdb_rdkit"},"zdock":{"author":null,"declares":{"name":"zdock","parameters":[{"name":"L","text":null},{"name":"R","text":null},{"name":"outdir","text":"'.\/'"},{"name":"fixed","text":"FALSE"},{"name":"n","text":"10"}],"sourceMap":{"File":"zdock.R","Line":"10","Method":{"Method":"zdock","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"L","text":"the pdb file path"},{"name":"R","text":"the another pdb file path"},{"name":"n","text":"set the number of output predictions, (default to 10)"},{"name":"fixed","text":"fix the receptor, preventing its rotation and switching with ligand during execution."}],"returns":null,"see_also":"","title":"zdock workflow for docking two structure data"},"mark_sur":{"author":null,"declares":{"name":"mark_sur","parameters":[{"name":"zdock","text":null},{"name":"i","text":null},{"name":"o","text":null}],"sourceMap":{"File":"zdock.R","Line":"54","Method":{"Method":"mark_sur","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"mark_sur"},"autodock_vina":{"author":null,"declares":{"name":"autodock_vina","parameters":[{"name":"prot.pdb","text":null},{"name":"ligand.pdb","text":null},{"name":"center","text":"NULL"},{"name":"size","text":"'c'(25, 25, 25)"},{"name":"num.modes","text":"10"},{"name":"energy.range","text":"4"},{"name":"exhaustiveness","text":"8"},{"name":"cpu","text":"1"},{"name":"seed","text":"NULL"},{"name":"mgltools.dir","text":"'\/opt\/mgltools'"},{"name":"autodock.vina.dir","text":"'\/opt\/autodock_vina'"},{"name":"temp.dir","text":"'tempfile'('vina_dock_')"},{"name":"make.cleanup","text":"FALSE"}],"sourceMap":{"File":"autodock_vina.R","Line":"71","Method":{"Method":"autodock_vina","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"This function performs protein-ligand molecular docking using AutoDock Vina\r\non a Linux system. It handles preparation of receptor and ligand PDB files\r\ninto PDBQT format, configuration of the docking box, execution of Vina,\r\nand extraction of the top-scoring pose.","details":"The function performs the following steps:\r\n\\enumerate{\r\n\\item Prepares the receptor PDB file into PDBQT format using `prepare_receptor4.py` from MGLTools.\r\n\\item Prepares the ligand PDB file into PDBQT format using `prepare_ligand4.py` from MGLTools.\r\n\\item Estimates the docking box center (if not provided) by calculating the centroid of all protein atoms.\r\n\\item Writes a Vina configuration file.\r\n\\item Executes AutoDock Vina.\r\n\\item Parses the output to extract the top-scoring pose and saves it as a PDB file.\r\n\\item Saves the docking scores to a text file.\r\n}","examples":"#\\dontrun{\r\n\r\n# Using protein centroid as box center (not always recommended)\r\nautodock_vina(\r\nprot_pdb = \"protein.pdb\",\r\nligand_pdb = \"ligand.pdb\"\r\n)\r\n# Providing explicit box center coordinates (recommended)\r\nautodock_vina(\r\nprot_pdb = \"protein.pdb\",\r\nligand_pdb = \"ligand.pdb\",\r\ncenter = c(10.5, 22.3, 18.7), # Coordinates based on known binding site\r\nsize = c(20, 20, 20),\r\nexhaustiveness = 16,\r\ncpu = 4\r\n)\r\n\r\n#}","keywords":[],"parameters":[{"name":"prot_pdb","text":"Character string. Path to the receptor protein PDB file."},{"name":"ligand_pdb","text":"Character string. Path to the ligand molecule PDB file."},{"name":"center","text":"Numeric vector of length 3. (x, y, z) coordinates for the center of the docking box in Angstroms. If NULL (default), the centroid of the protein is used. Providing explicit coordinates is strongly recommended for accurate docking[1,7](@ref)."},{"name":"size","text":"Numeric vector of length 3. Size of the docking box in Angstroms (x, y, z dimensions). Default: c(25, 25, 25)"},{"name":"num_modes","text":"Integer. Maximum number of binding modes to generate. Default: 10"},{"name":"energy_range","text":"Numeric. Energy range (in kcal\/mol) above the best mode to output. Default: 4"},{"name":"exhaustiveness","text":"Integer. Exhaustiveness of the global search. Higher values may improve results but increase computation time. Typical range: 8-32[9](@ref). Default: 8"},{"name":"cpu","text":"Integer. Number of CPU cores to use. Default: 1"},{"name":"seed","text":"Integer. Random seed. Use for reproducible results. Default: NULL (uses Vina default)"},{"name":"mgltools_dir","text":"Character string. Path to the MGLTools directory. Default: '\/opt\/mgltools'"},{"name":"autodock_vina_dir","text":"Character string. Path to the AutoDock Vina directory. Default: '\/opt\/autodock'"},{"name":"make_cleanup","text":"Logical. Should temporary files be removed after completion? Default: FALSE"}],"returns":"Invisible NULL. The function writes two output files: the top-scoring complex structure (`complex_pdb`) and a text file containing docking scores (`score_txt`).","see_also":"","title":"Run Molecular Docking with AutoDock Vina"},"vina_score_parser":{"author":null,"declares":{"name":"vina_score_parser","parameters":[{"name":"vina","text":null},{"name":"n","text":null}],"sourceMap":{"File":"vina_score_parser.R","Line":"69","Method":{"Method":"vina_score_parser","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"This function parses the output from AutoDock Vina, specifically the table\r\nthat contains docking scores for each mode, and converts it into a dataframe.","details":"This function identifies the table in the Vina output that contains the\r\ndocking scores. AutoDock Vina is a widely used open-source program for\r\nmolecular docking, which predicts how small molecules bind to a receptor\r\nof known 3D structure. The output includes multiple binding modes (poses)\r\nwith their corresponding scores.\r\nThe table typically has the following structure:\r\n\\preformatted{\r\nmode |   affinity | dist from best mode\r\n| (kcal\/mol) | rmsd l.b.| rmsd u.b.\r\n-----+------------+----------+----------\r\n1         -6.6      0.000      0.000\r\n2         -6.2      2.396      9.931\r\n3         -6.2      1.562      2.369\r\n...\r\n}\r\nThe function extracts this table, processes each line to split on whitespace,\r\nand converts the values to numeric types before creating the final dataframe.\r\nIf the function cannot find the table header (a line starting with \"mode   |\"),\r\nit will stop with an error message indicating that no model result could be parsed.","examples":"#\\dontrun{\r\n\r\n# Read the Vina output file\r\nvina_output <- readLines(\"vina_output.txt\")\r\n# Parse the scores, assuming 10 modes were requested\r\nscores_df <- vina_score_parser(vina_output, n = 10)\r\n# View the resulting dataframe\r\nprint(scores_df)\r\n# Access the affinity of the best mode\r\nbest_affinity <- scores_df[1, \"affinity(kcal\/mol)\"]\r\nprint(paste(\"Best affinity:\", best_affinity, \"kcal\/mol\"))\r\n\r\n#}","keywords":[],"parameters":[{"name":"vina","text":"A character vector containing the content of a Vina score text file,\r\ntypically read via \\code{\\link{readLines}}."},{"name":"n","text":"The value of the \\code{num_modes} command-line argument used in the\r\nVina docking configuration, indicating how many modes were generated."}],"returns":"A dataframe with the parsed Vina scores. The dataframe has four columns:\r\n\\describe{\r\n\\item{affinity(kcal\/mol)}{The binding affinity in kcal\/mol for each mode.}\r\n\\item{rmsd l.b.}{The RMSD lower bound for each mode compared to the best mode.}\r\n\\item{rmsd u.b.}{The RMSD upper bound for each mode compared to the best mode.}\r\n}\r\nThe row names are formatted as \"#1\", \"#2\", etc., corresponding to the mode numbers.","see_also":"\\code{\\link{readLines}} for reading text files into R.","title":"Parse AutoDock Vina Docking Score Text File"},"split_pdbqt":{"author":null,"declares":{"name":"split_pdbqt","parameters":[{"name":"scores","text":null},{"name":"result.pdbqt","text":null},{"name":"prot.pdbqt","text":"NULL"}],"sourceMap":{"File":"vina_split.R","Line":"33","Method":{"Method":"split_pdbqt","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"This function processes the output PDBQT file from AutoDock Vina docking simulations,\r\nextracts the ligand models, and optionally combines them with a protein receptor structure\r\nto create protein-ligand complex models. The resulting PDBQT data can be saved as files\r\nfor visualization in molecular viewers like Mol*.","details":"","examples":"#\\dontrun{\r\n\r\n# Basic usage with ligand models only\r\nscores_data <- parse_vina_scores(\"docking_log.txt\")\r\nmodels_df <- split_pdbqt(scores_data, \"docking_results.pdbqt\")\r\n# Usage with protein receptor to create complexes\r\nreceptor_pdbqt <- readLines(\"receptor.pdbqt\")\r\ncomplex_models <- split_pdbqt(scores_data, \"docking_results.pdbqt\", receptor_pdbqt)\r\n\r\n#}","keywords":[],"parameters":[{"name":"result_pdbqt","text":"A character string specifying the file path to the AutoDock Vina\r\ndocking output PDBQT file containing the ligand poses."},{"name":"scores","text":"A data frame containing the binding scores parsed from the Vina docking\r\nresult log file. Typically generated by parsing the Vina output text."},{"name":"prot_pdbqt","text":"Optional character string containing the PDBQT content of the protein\r\nreceptor used in the docking simulation. If provided, it will be combined with each\r\nligand model to create full complex structures."}],"returns":"A data frame that extends the input `scores` data frame by adding a \"pdbqt\"\r\ncolumn. This new column contains the PDBQT format data for each extracted model,\r\nrepresenting either ligand-only structures or protein-ligand complexes if\r\n`prot_pdbqt` was provided.","see_also":"","title":"Extract models from AutoDock Vina docking results"}}